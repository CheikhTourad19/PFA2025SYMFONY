

services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html:cached
      - vendor:/var/www/html/vendor
      - node_modules:/var/www/html/node_modules
    ports:
      - "9002:9002"
    environment:
      - APP_ENV=dev
      - PHP_OPCACHE_VALIDATE_TIMESTAMPS=1
    depends_on:
      - node

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: php bin/console messenger:consume async --time-limit=3600 --limit=1000 --memory-limit=128M --no-interaction
    volumes:
      - .:/var/www/html:cached
      - vendor:/var/www/html/vendor
    environment:
      - APP_ENV=dev
      - PHP_OPCACHE_VALIDATE_TIMESTAMPS=1
    depends_on:
      - php
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 10s
      timeout: 3s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - vendor:/var/www/html/vendor
      - node_modules:/var/www/html/node_modules
    depends_on:
      - php
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost"]
      interval: 10s
      timeout: 3s
      retries: 3

  node:
    image: node:18
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html:cached
      - node_modules:/var/www/html/node_modules
    command: [ "sh", "-c", "npm install && npm run watch" ]
    tty: true
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

###> symfony/mercure-bundle ###
  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      # Uncomment the following line to disable HTTPS,
      #SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      # Set the URL of your Symfony project (without trailing slash!) as value of the cors_origins directive
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins http://127.0.0.1:8000
    # Comment the following line to disable the development mode
    command: /usr/bin/caddy run --config /etc/caddy/dev.Caddyfile
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost/healthz"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - mercure_data:/data
      - mercure_config:/config
###< symfony/mercure-bundle ###

volumes:
  vendor:
  node_modules:
###> symfony/mercure-bundle ###
  mercure_data:
  mercure_config:
###< symfony/mercure-bundle ###
