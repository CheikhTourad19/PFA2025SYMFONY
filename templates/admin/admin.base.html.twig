{# templates/pharmacie/base.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}E-Medical Pharmacie{% endblock %}
{% block head %}
    {{ parent() }}
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        [x-cloak] { display: none !important; }
    </style>
{% endblock %}

{% block body %}
    {# Store flash messages in JavaScript variables #}
    <script>
        window.flashMessages = {
            success: [{% for message in app.flashes('success') %}'{{ message|e('js') }}'{% if not loop.last %},{% endif %}{% endfor %}],
            error: [{% for message in app.flashes('error') %}'{{ message|e('js') }}'{% if not loop.last %},{% endif %}{% endfor %}],
            warning: [{% for message in app.flashes('warning') %}'{{ message|e('js') }}'{% if not loop.last %},{% endif %}{% endfor %}],
            info: [{% for message in app.flashes('info') %}'{{ message|e('js') }}'{% if not loop.last %},{% endif %}{% endfor %}]
        };
    </script>

    <div class="min-h-screen flex flex-col bg-gray-50"
         x-data="{
            isModalOpen: false,
            isFlashModalOpen: false,
            isMobileMenuOpen: false,
            flashMessages: [],
            currentFlashIndex: 0,
            currentFlashMessage: '',
            currentFlashType: '',

            showNextFlashMessage() {
                if (this.currentFlashIndex < this.flashMessages.length - 1) {
                    this.currentFlashIndex++;
                    this.currentFlashMessage = this.flashMessages[this.currentFlashIndex].message;
                    this.currentFlashType = this.flashMessages[this.currentFlashIndex].type;
                } else {
                    this.isFlashModalOpen = false;
                }
            },

            showPreviousFlashMessage() {
                if (this.currentFlashIndex > 0) {
                    this.currentFlashIndex--;
                    this.currentFlashMessage = this.flashMessages[this.currentFlashIndex].message;
                    this.currentFlashType = this.flashMessages[this.currentFlashIndex].type;
                }
            }
         }"
         x-init="
            (() => {
                const types = ['success', 'error', 'warning', 'info'];
                let allMessages = [];

                for (const type of types) {
                    if (window.flashMessages[type] && window.flashMessages[type].length > 0) {
                        window.flashMessages[type].forEach(message => {
                            allMessages.push({ type: type, message: message });
                        });
                    }
                }

                if (allMessages.length > 0) {
                    flashMessages = allMessages;
                    currentFlashMessage = allMessages[0].message;
                    currentFlashType = allMessages[0].type;
                    isFlashModalOpen = true;
                }
            })()
         "
         x-on:keydown.esc.prevent="isModalOpen = false; isFlashModalOpen = false;">
        <!-- Navbar -->
        <!-- Navbar -->
        <nav class="bg-gradient-to-r from-blue-600 to-blue-500 text-white p-4 shadow-lg" :class="{ 'blur-sm': isModalOpen || isFlashModalOpen }">
            <div class="max-w-7xl mx-auto">
                <!-- Mobile menu header -->
                <div class="flex items-center justify-between">
                    <!-- Titre de l'application -->
                    <div class="text-2xl font-bold tracking-tight">Espace Admin</div>

                    <!-- Mobile menu button -->
                    <div class="md:hidden">
                        <button @click="isMobileMenuOpen = !isMobileMenuOpen" type="button" class="text-white hover:text-gray-200 focus:outline-none">
                            <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                            </svg>
                        </button>
                    </div>
                </div>

                <!-- Desktop Navigation -->
                <div class="hidden md:flex items-center justify-between mt-2">
                    <!-- Navigation Links -->
                    <div class="flex items-center space-x-2 md:space-x-4">
                        {% set currentRoute = app.request.attributes.get('_route') %}

                        <a href="{{ path('app_admin_home') }}"
                           class="px-3 py-2 text-sm md:text-base md:px-4 rounded-lg transition-all duration-300 {{ currentRoute == 'app_admin_home' ? 'bg-blue-700 shadow-md' : 'hover:bg-blue-700 hover:shadow-md' }}">
                            Dashboard
                        </a>

                        <a href="{{ path('app_admin_users') }}"
                           class="px-3 py-2 text-sm md:text-base md:px-4 rounded-lg transition-all duration-300 {{ currentRoute == 'app_admin_users' ? 'bg-blue-700 shadow-md' : 'hover:bg-blue-700 hover:shadow-md' }}">
                            utilisateurs
                        </a>

                        <a href="{{ path('app_admin_reports') }}"
                           class="px-3 py-2 text-sm md:text-base md:px-4 rounded-lg transition-all duration-300 {{ currentRoute == 'app_admin_reports' ? 'bg-blue-700 shadow-md' : 'hover:bg-blue-700 hover:shadow-md' }}">
                            rapports
                        </a>

                        <a href="{{ path('app_admin_settings') }}"
                           class="px-3 py-2 text-sm md:text-base md:px-4 rounded-lg transition-all duration-300 {{ currentRoute == 'app_admin_settings' ? 'bg-blue-700 shadow-md' : 'hover:bg-blue-700 hover:shadow-md' }}">
                            chatbot
                        </a>


                    </div>

                    <!-- Replace the existing "User Info and Logout" section with this -->
                    <div class="flex items-center space-x-4">
                        <!-- User Dropdown -->
                        <div x-data="{ open: false }" class="relative inline-block">
                            <!-- Dropdown Toggle -->
                            <button @click="open = !open"
                                    class="flex items-center gap-2 px-3 py-2 text-sm font-medium text-white hover:bg-blue-700 rounded-lg transition-all duration-300">
                                <div class="flex-shrink-0 h-12 w-12 rounded-full bg-blue-900 flex items-center justify-center">
                                    <span class="text-xl font-bold text-white">{{ app.user.getPrenom|first|upper }}{{ app.user.getNom|first|upper }}</span>
                                </div>
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor"
                                     class="w-4 h-4 transition-transform" :class="{ 'rotate-180': open }">
                                    <path fill-rule="evenodd" d="M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd"/>
                                </svg>
                            </button>

                            <!-- Dropdown Menu -->
                            <div x-cloak x-show="open" @click.outside="open = false"
                                 x-transition:enter="transition ease-out duration-100"
                                 x-transition:enter-start="opacity-0 -translate-y-3"
                                 x-transition:enter-end="opacity-100 translate-y-0"
                                 x-transition:leave="transition ease-in duration-75"
                                 x-transition:leave-start="opacity-100 translate-y-0"
                                 x-transition:leave-end="opacity-0 translate-y-10"
                                 class="absolute right-0 z-50 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-lg bg-white shadow-lg ring-1 ring-black/5 focus:outline-none">
                                <!-- User Info -->
                                <div class="px-4 py-3">
                                    <p class="text-sm font-medium text-gray-900">{{ app.user.prenom }} {{ app.user.nom }}</p>
                                    <p class="text-xs text-gray-500 truncate">{{ app.user.email }}</p>
                                </div>

                                <!-- Menu Items -->
                                <div class="py-1">
                                    <a href="{{ path('app_admin_profile') }}"
                                       class="flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                        <svg class="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-5.5-2.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM10 12a5.99 5.99 0 00-4.793 2.39A6.483 6.483 0 0010 16.5a6.483 6.483 0 004.793-2.11A5.99 5.99 0 0010 12z" clip-rule="evenodd"/>
                                        </svg>
                                        Profile
                                    </a>
                                    <a href="{{ path('app_admin_settings') }}"
                                       class="flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                        <svg class="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M19 5.5a4.5 4.5 0 01-4.791 4.49c-.873-.055-1.808.128-2.368.8l-6.024 7.23a2.724 2.724 0 11-3.837-3.837L9.21 8.16c.672-.56.855-1.495.8-2.368a4.5 4.5 0 015.873-4.575c.324.105.39.51.15.752L13.34 4.66a.455.455 0 00-.11.494 3.01 3.01 0 001.617 1.617c.17.07.363.02.493-.111l2.692-2.692c.241-.241.647-.174.752.15.14.435.216.9.216 1.382zM4 17a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"/>
                                        </svg>
                                        Settings
                                    </a>
                                </div>

                                <!-- Logout -->
                                <div class="py-1">
                                    <button @click="isModalOpen = true"
                                            class="w-full flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                        <svg class="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M3 4.25A2.25 2.25 0 015.25 2h5.5A2.25 2.25 0 0113 4.25v2a.75.75 0 01-1.5 0v-2a.75.75 0 00-.75-.75h-5.5a.75.75 0 00-.75.75v11.5c0 .414.336.75.75.75h5.5a.75.75 0 00.75-.75v-2a.75.75 0 011.5 0v2A2.25 2.25 0 0110.75 18h-5.5A2.25 2.25 0 013 15.75V4.25z" clip-rule="evenodd"/>
                                            <path fill-rule="evenodd" d="M6 10a.75.75 0 01.75-.75h9.546l-1.048-.943a.75.75 0 111.004-1.114l2.5 2.25a.75.75 0 010 1.114l-2.5 2.25a.75.75 0 11-1.004-1.114l1.048-.943H6.75A.75.75 0 016 10z" clip-rule="evenodd"/>
                                        </svg>
                                        Logout
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Mobile Navigation -->
                    <div x-show="isMobileMenuOpen" @click.away="isMobileMenuOpen = false"
                         class="md:hidden mt-4 space-y-2 pb-2"
                         x-transition:enter="transition ease-out duration-100"
                         x-transition:enter-start="opacity-0 scale-95"
                         x-transition:enter-end="opacity-100 scale-100"
                         x-transition:leave="transition ease-in duration-75"
                         x-transition:leave-start="opacity-100 scale-100"
                         x-transition:leave-end="opacity-0 scale-95">
                        {% set currentRoute = app.request.attributes.get('_route') %}

                        <a href="{{ path('app_admin_home') }}"
                           class="block px-3 py-2 rounded-lg transition-all duration-300 {{ currentRoute == 'app_admin_home' ? 'bg-blue-700 shadow-md' : 'hover:bg-blue-700 hover:shadow-md' }}">
                            Dashboard
                        </a>

                        <a href="{{ path('app_admin_users') }}"
                           class="block px-3 py-2 rounded-lg transition-all duration-300 {{ currentRoute == 'app_admin_users' ? 'bg-blue-700 shadow-md' : 'hover:bg-blue-700 hover:shadow-md' }}">
                            Utilisateurs
                        </a>

                        <a href="{{ path('app_admin_reports') }}"
                           class="block px-3 py-2 rounded-lg transition-all duration-300 {{ currentRoute == 'app_admin_reports' ? 'bg-blue-700 shadow-md' : 'hover:bg-blue-700 hover:shadow-md' }}">
                            Rapports
                        </a>

                        <a href="{{ path('app_admin_chatbot') }}"
                           class="block px-3 py-2 rounded-lg transition-all duration-300 {{ currentRoute == 'app_admin_chatbot' ? 'bg-blue-700 shadow-md' : 'hover:bg-blue-700 hover:shadow-md' }}">
                            chatbot
                        </a>

                        <div class="pt-2 border-t border-blue-400">
                            <div class="mb-2">
                                <p class="font-semibold">{{ app.user.prenom }} {{ app.user.nom }}</p>
                                <p class="text-sm text-gray-200">{{ app.user.email }}</p>

                            </div>

                            <button @click="isModalOpen = true"
                                    class="w-full px-3 py-2 bg-red-600 rounded-lg shadow-md hover:bg-red-500 hover:shadow-lg transition-all duration-300">
                                Se déconnecter
                            </button>
                            <a class=" mt-3 bg-green-500 block px-3 py-2 rounded-lg transition-all duration-300" href="{{ path('app_home') }}">Quitter l'espace </a>
                        </div>
                    </div>
                </div>
        </nav>
        <!-- Contenu principal -->
        <div class="flex-1 container mx-auto px-4 py-6 md:p-6" :class="{ 'blur-sm': isModalOpen || isFlashModalOpen }">
            {% block content %}{% endblock %}
        </div>

        <!-- Footer -->
        <footer class="bg-gradient-to-r from-blue-600 to-blue-500 text-white py-4 mt-8" :class="{ 'blur-sm': isModalOpen || isFlashModalOpen }">
            <div class="max-w-7xl mx-auto px-4 text-center">
                <p class="text-sm">&copy; 2025 E-medical. Tous droits réservés.</p>
            </div>
        </footer>

        <!-- Logout Confirmation Modal -->
        <div
                x-cloak
                x-show="isModalOpen"
                x-transition:enter="transition ease-out duration-300"
                x-transition:enter-start="opacity-0"
                x-transition:enter-end="opacity-100"
                x-transition:leave="transition ease-in duration-200"
                x-transition:leave-start="opacity-100"
                x-transition:leave-end="opacity-0"
                x-bind:aria-hidden="!isModalOpen"
                tabindex="-1"
                role="dialog"
                class="z-50 fixed inset-0 overflow-y-auto overflow-x-hidden bg-zinc-900/75 p-4 backdrop-blur-xs will-change-auto lg:p-8">

            <!-- Modal Dialog -->
            <div
                    x-cloak
                    x-show="isModalOpen"
                    x-on:click.away="isModalOpen = false"
                    x-transition:enter="transition ease-out duration-300"
                    x-transition:enter-start="opacity-0 scale-90 -translate-y-full"
                    x-transition:enter-end="opacity-100 scale-100 translate-y-0"
                    x-transition:leave="transition ease-in duration-150"
                    x-transition:leave-start="opacity-100 scale-100 translate-y-0"
                    x-transition:leave-end="opacity-0 scale-125 translate-y-full"
                    role="document"
                    class="mx-auto flex w-full max-w-md flex-col overflow-hidden rounded-lg bg-white shadow-xs will-change-auto">

                <div class="flex items-center justify-between bg-zinc-50 px-5 py-4">
                    <h3 class="text-lg font-bold">Confirmation</h3>
                    <div class="-my-4">
                        <button
                                x-on:click="isModalOpen = false"
                                type="button"
                                class="inline-flex items-center justify-center gap-2 rounded-lg border border-zinc-200 bg-white px-3 py-2 text-xs font-semibold leading-5 text-zinc-800 hover:border-zinc-300 hover:text-zinc-900 hover:shadow-xs focus:ring-zinc-300/25 active:border-zinc-200 active:shadow-none">
                            <svg
                                    class="inline-block size-4 -mx-1"
                                    fill="currentColor"
                                    viewBox="0 0 20 20"
                                    xmlns="http://www.w3.org/2000/svg">
                                <path
                                        fill-rule="evenodd"
                                        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                        clip-rule="evenodd">
                                </path>
                            </svg>
                        </button>
                    </div>
                </div>

                <div class="grow p-5">
                    <p class="text-sm/relaxed">Êtes-vous sûr de vouloir vous déconnecter ?</p>
                </div>

                <div class="flex items-center justify-end gap-1.5 border-t border-zinc-100 px-5 py-4">
                    <button
                            x-on:click="isModalOpen = false"
                            type="button"
                            class="inline-flex items-center justify-center gap-2 rounded-lg border border-zinc-200 bg-white px-3 py-2 text-sm font-semibold leading-5 text-zinc-800 hover:border-zinc-300 hover:text-zinc-900 hover:shadow-xs focus:ring-zinc-300/25 active:border-zinc-200 active:shadow-none">
                        Annuler
                    </button>
                    <form action="{{ path('app_logout') }}" method="POST" class="inline">
                        <button
                                type="submit"
                                class="inline-flex items-center justify-center gap-2 rounded-lg border border-zinc-800 bg-red-500 px-3 py-2 text-sm font-medium leading-5 text-white hover:border-red-900 hover:bg-red-900 hover:text-white focus:outline-hidden focus:ring-2 focus:ring-zinc-500/50 active:border-zinc-700 active:bg-zinc-700">
                            Se déconnecter
                        </button>
                    </form>
                </div>
            </div>
            <!-- END Modal Dialog -->
        </div>
        <!-- END Logout Confirmation Modal -->

        <!-- Flash Messages Modal -->
        <div
                x-cloak
                x-show="isFlashModalOpen"
                x-transition:enter="transition ease-out duration-300"
                x-transition:enter-start="opacity-0"
                x-transition:enter-end="opacity-100"
                x-transition:leave="transition ease-in duration-200"
                x-transition:leave-start="opacity-100"
                x-transition:leave-end="opacity-0"
                x-bind:aria-hidden="!isFlashModalOpen"
                tabindex="-1"
                role="dialog"
                class="z-50 fixed inset-0 overflow-y-auto overflow-x-hidden bg-zinc-900/75 p-4 backdrop-blur-xs will-change-auto lg:p-8">

            <!-- Modal Dialog -->
            <div
                    x-cloak
                    x-show="isFlashModalOpen"
                    x-on:click.away="isFlashModalOpen = false"
                    x-transition:enter="transition ease-out duration-300"
                    x-transition:enter-start="opacity-0 scale-90 -translate-y-full"
                    x-transition:enter-end="opacity-100 scale-100 translate-y-0"
                    x-transition:leave="transition ease-in duration-150"
                    x-transition:leave-start="opacity-100 scale-100 translate-y-0"
                    x-transition:leave-end="opacity-0 scale-125 translate-y-full"
                    role="document"
                    class="mx-auto flex w-full max-w-md flex-col overflow-hidden rounded-lg bg-white shadow-xs will-change-auto"
                    :class="{
                    'border-l-4 border-green-500': currentFlashType === 'success',
                    'border-l-4 border-red-500': currentFlashType === 'error',
                    'border-l-4 border-yellow-500': currentFlashType === 'warning',
                    'border-l-4 border-blue-500': currentFlashType === 'info'
                }">

                <div
                        class="flex items-center justify-between px-5 py-4"
                        :class="{
                        'bg-green-50': currentFlashType === 'success',
                        'bg-red-50': currentFlashType === 'error',
                        'bg-yellow-50': currentFlashType === 'warning',
                        'bg-blue-50': currentFlashType === 'info',
                        'bg-zinc-50': !currentFlashType
                    }">
                    <div class="flex items-center gap-2">
                        <h3 class="text-lg font-bold"
                            :class="{
                                'text-green-700': currentFlashType === 'success',
                                'text-red-700': currentFlashType === 'error',
                                'text-yellow-700': currentFlashType === 'warning',
                                'text-blue-700': currentFlashType === 'info'
                            }">
                            <span x-text="currentFlashType === 'success' ? 'Succès' :
                                    currentFlashType === 'error' ? 'Erreur' :
                                    currentFlashType === 'warning' ? 'Attention' : 'Information'"></span>
                        </h3>
                        <div class="text-gray-500 text-sm" x-show="flashMessages.length > 1">
                            <span x-text="(currentFlashIndex + 1) + ' / ' + flashMessages.length"></span>
                        </div>
                    </div>
                    <div class="-my-4">
                        <button
                                x-on:click="isFlashModalOpen = false"
                                type="button"
                                class="inline-flex items-center justify-center gap-2 rounded-lg border border-zinc-200 bg-white px-3 py-2 text-xs font-semibold leading-5 text-zinc-800 hover:border-zinc-300 hover:text-zinc-900 hover:shadow-xs focus:ring-zinc-300/25 active:border-zinc-200 active:shadow-none">
                            <svg
                                    class="inline-block size-4 -mx-1"
                                    fill="currentColor"
                                    viewBox="0 0 20 20"
                                    xmlns="http://www.w3.org/2000/svg">
                                <path
                                        fill-rule="evenodd"
                                        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                        clip-rule="evenodd">
                                </path>
                            </svg>
                        </button>
                    </div>
                </div>

                <div class="grow p-5">
                    <p x-text="currentFlashMessage" class="text-sm/relaxed"></p>
                </div>

                <div class="flex items-center justify-between gap-1.5 border-t border-zinc-100 px-5 py-4">
                    <div class="space-x-2" x-show="flashMessages.length > 1">
                        <button @click="showPreviousFlashMessage()"
                                class="inline-flex items-center justify-center gap-2 rounded-lg border border-zinc-200 bg-white px-3 py-1 text-sm font-semibold leading-5 text-zinc-800 hover:border-zinc-300 hover:text-zinc-900 hover:shadow-xs"
                                :disabled="currentFlashIndex === 0"
                                :class="{ 'opacity-50 cursor-not-allowed': currentFlashIndex === 0 }">
                            &larr;
                        </button>
                        <button @click="showNextFlashMessage()"
                                class="inline-flex items-center justify-center gap-2 rounded-lg border border-zinc-200 bg-white px-3 py-1 text-sm font-semibold leading-5 text-zinc-800 hover:border-zinc-300 hover:text-zinc-900 hover:shadow-xs"
                                :disabled="currentFlashIndex === flashMessages.length - 1"
                                :class="{ 'opacity-50 cursor-not-allowed': currentFlashIndex === flashMessages.length - 1 }">
                            &rarr;
                        </button>
                    </div>
                    <button @click="isFlashModalOpen = false"
                            class="inline-flex items-center justify-center gap-2 rounded-lg border px-3 py-2 text-sm font-medium leading-5 text-white hover:text-white focus:outline-hidden focus:ring-2"
                            :class="{
                                'border-green-600 bg-green-600 hover:border-green-700 hover:bg-green-700 focus:ring-green-500/50 active:border-green-500 active:bg-green-500': currentFlashType === 'success',
                                'border-red-600 bg-red-600 hover:border-red-700 hover:bg-red-700 focus:ring-red-500/50 active:border-red-500 active:bg-red-500': currentFlashType === 'error',
                                'border-yellow-600 bg-yellow-600 hover:border-yellow-700 hover:bg-yellow-700 focus:ring-yellow-500/50 active:border-yellow-500 active:bg-yellow-500': currentFlashType === 'warning',
                                'border-blue-600 bg-blue-600 hover:border-blue-700 hover:bg-blue-700 focus:ring-blue-500/50 active:border-blue-500 active:bg-blue-500': currentFlashType === 'info' || !currentFlashType
                            }">
                        Fermer
                    </button>
                </div>
            </div>
            <!-- END Modal Dialog -->
        </div>
        <!-- END Flash Messages Modal -->
    </div>
{% endblock %}