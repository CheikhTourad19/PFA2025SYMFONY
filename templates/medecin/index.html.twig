{# templates/pharmacie/base.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}E-Medical Doctor Portal{% endblock %}

{% block head %}
    {{ parent() }}
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
    <style>
        [x-cloak] { display: none !important; }
        :root {
            --primary: #3b82f6;
            --primary-dark: #2563eb;
            --primary-light: #93c5fd;
            --secondary: #10b981;
            --danger: #ef4444;
            --warning: #f59e0b;
            --info: #06b6d4;
            --dark: #1e293b;
            --light: #f8fafc;
        }

        .smooth-transition {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .glass-effect {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }

        .nav-item-active {
            position: relative;
        }

        .nav-item-active:after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 100%;
            height: 2px;
            background: currentColor;
            transform-origin: left;
            animation: scaleIn 0.3s ease-out forwards;
        }

        @keyframes scaleIn {
            from { transform: scaleX(0); }
            to { transform: scaleX(1); }
        }

        .floating {
            animation: floating 6s ease-in-out infinite;
        }

        @keyframes floating {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-8px); }
            100% { transform: translateY(0px); }
        }
    </style>
    <script>
        window.flashMessages = {
            success: [{% for message in app.flashes('success') %}'{{ message|e('js') }}'{% if not loop.last %},{% endif %}{% endfor %}],
            error: [{% for message in app.flashes('error') %}'{{ message|e('js') }}'{% if not loop.last %},{% endif %}{% endfor %}],
            warning: [{% for message in app.flashes('warning') %}'{{ message|e('js') }}'{% if not loop.last %},{% endif %}{% endfor %}],
            info: [{% for message in app.flashes('info') %}'{{ message|e('js') }}'{% if not loop.last %},{% endif %}{% endfor %}]
        };
    </script>
{% endblock %}

{% block body %}
    <div class="min-h-screen flex flex-col bg-gradient-to-br from-gray-50 to-blue-50"
         x-data="{
            isModalOpen: false,
            isFlashModalOpen: false,
            isMobileMenuOpen: false,
            flashMessages: [],
            currentFlashIndex: 0,
            currentFlashMessage: '',
            currentFlashType: '',

            showNextFlashMessage() {
                if (this.currentFlashIndex < this.flashMessages.length - 1) {
                    this.currentFlashIndex++;
                    this.currentFlashMessage = this.flashMessages[this.currentFlashIndex].message;
                    this.currentFlashType = this.flashMessages[this.currentFlashIndex].type;
                } else {
                    this.isFlashModalOpen = false;
                }
            },

            showPreviousFlashMessage() {
                if (this.currentFlashIndex > 0) {
                    this.currentFlashIndex--;
                    this.currentFlashMessage = this.flashMessages[this.currentFlashIndex].message;
                    this.currentFlashType = this.flashMessages[this.currentFlashIndex].type;
                }
            }
         }"
         x-init="
            (() => {
                const types = ['success', 'error', 'warning', 'info'];
                let allMessages = [];

                for (const type of types) {
                    if (window.flashMessages[type] && window.flashMessages[type].length > 0) {
                        window.flashMessages[type].forEach(message => {
                            allMessages.push({ type: type, message: message });
                        });
                    }
                }

                if (allMessages.length > 0) {
                    flashMessages = allMessages;
                    currentFlashMessage = allMessages[0].message;
                    currentFlashType = allMessages[0].type;
                    isFlashModalOpen = true;
                }
            })()
         "
         x-on:keydown.esc.prevent="isModalOpen = false; isFlashModalOpen = false;">

        <!-- Modern Navbar -->
        <nav class="glass-effect shadow-sm sticky top-0 z-40 bg-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="relative flex items-center justify-between h-16 md:h-20">
                    <!-- Logo and app name -->
                    <div class="flex-shrink-0 flex items-center space-x-3">
                        <div class="flex items-center space-x-2">
                            <img class="h-8 w-8 text-blue-600 rounded" src="{{ asset('assets/img.jpg') }}" alt="logo" >


                            <div class="flex flex-col justify-center space-y-1">
                                <span class="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-blue-400 tracking-tight">E-Medical</span>
                                <span class="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-blue-400 tracking-tight">Espace Medecin</span>
                            </div>
                        </div>
                    </div>

                    <!-- Desktop navigation -->
                    <div class="hidden md:flex items-center space-x-1">
                        {% set currentRoute = app.request.attributes.get('_route') %}
                        {% set menu_items = {
                            'app_medecin_home': 'bx-home',
                            'app_task_index': 'bx-task',
                            'app_medecin_dossier_medical': 'bx-folder',
                            'app_medecin_messages': 'bx-chat',
                            'app_medecin_calendrier': 'bx-calendar',
                            'app_medecin_profil': 'bx-user',
                            'app_medecin_ordonnace':'bx-prescription',
                        } %}
                        {% for route,icon in menu_items %}
                            <a href="{{ path(route) }}"
                               class="group relative px-4 py-2 rounded-lg smooth-transition {{ currentRoute == route ? 'nav-item-active text-blue-600 font-medium' : 'text-gray-600 hover:text-blue-600' }}">
                                <div class="flex items-center space-x-2">
                                    <i class="bx {{ icon }} text-lg"></i>
                                    <span>{{ icon|replace({'bx-':'','bx':''})|capitalize }}</span>
                                </div>
                            </a>
                        {% endfor %}
                    </div>

                    <!-- User profile and mobile menu button -->
                    <div class="flex items-center space-x-4">
                        <button @click="isModalOpen = true"
                                class="flex items-center space-x-1 px-4 py-2 rounded-lg bg-gradient-to-r from-red-500 to-red-400 text-white shadow-sm hover:shadow-md smooth-transition">
                            <i class="bx bx-log-out"></i>
                            <span class="hidden sm:inline">Deconnexion</span>
                        </button>

                        <!-- Mobile menu button -->
                        <button @click="isMobileMenuOpen = !isMobileMenuOpen"
                                class="md:hidden p-2 rounded-lg text-gray-600 hover:bg-gray-100 focus:outline-none smooth-transition">
                            <i class="bx bx-menu text-2xl" x-show="!isMobileMenuOpen"></i>
                            <i class="bx bx-x text-2xl" x-show="isMobileMenuOpen" x-cloak></i>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Mobile menu -->
            <div x-cloak x-show="isMobileMenuOpen"
                 x-transition:enter="transition ease-out duration-300"
                 x-transition:enter-start="opacity-0 translate-y-4"
                 x-transition:enter-end="opacity-100 translate-y-0"
                 x-transition:leave="transition ease-in duration-200"
                 x-transition:leave-start="opacity-100 translate-y-0"
                 x-transition:leave-end="opacity-0 translate-y-4"
                 class="md:hidden glass-effect rounded-lg mx-4 shadow-xl overflow-hidden">
                <div class="px-2 pt-2 pb-3 space-y-1">
                    {% set currentRoute = app.request.attributes.get('_route') %}
                    {% for route,icon in menu_items %}
                        <a href="{{ path(route) }}"
                           class="flex items-center px-4 py-3 rounded-lg smooth-transition {{ currentRoute == route ? 'bg-blue-100 text-blue-600' : 'text-gray-700 hover:bg-gray-100' }}">
                            <i class="bx {{ icon }} text-lg mr-3"></i>
                            <span>{{ icon|replace({'bx-':'','bx':''})|capitalize }}</span>
                        </a>
                    {% endfor %}
                </div>
            </div>
        </nav>

        <!-- Page content -->
        <main class="flex-grow">
            {% block content %}{% endblock %}
        </main>

        <!-- Modern Footer -->


        <!-- Logout Confirmation Modal -->
        <div x-cloak x-show="isModalOpen"
             x-transition:enter="transition ease-out duration-300"
             x-transition:enter-start="opacity-0"
             x-transition:enter-end="opacity-100"
             x-transition:leave="transition ease-in duration-200"
             x-transition:leave-start="opacity-100"
             x-transition:leave-end="opacity-0"
             class="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-50 backdrop-blur-sm">

            <div x-on:click.away="isModalOpen = false"
                 x-transition:enter="transition ease-out duration-300"
                 x-transition:enter-start="opacity-0 translate-y-4 scale-95"
                 x-transition:enter-end="opacity-100 translate-y-0 scale-100"
                 x-transition:leave="transition ease-in duration-200"
                 x-transition:leave-start="opacity-100 translate-y-0 scale-100"
                 x-transition:leave-end="opacity-0 translate-y-4 scale-95"
                 class="w-full max-w-md rounded-xl bg-white shadow-xl overflow-hidden">

                <div class="p-6">
                    <div class="flex items-center justify-between">
                        <h3 class="text-xl font-bold text-gray-900">Confirmer deconnexion</h3>
                        <button @click="isModalOpen = false" class="text-gray-400 hover:text-gray-500">
                            <i class="bx bx-x text-2xl"></i>
                        </button>
                    </div>

                    <div class="mt-4">
                        <p class="text-gray-600">Etes vous sur de vouloir vous deconnecter?</p>
                    </div>

                    <div class="mt-6 flex justify-end space-x-3">
                        <button @click="isModalOpen = false"
                                class="px-4 py-2 rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-50 smooth-transition">
                            annuler
                        </button>
                        <form action="{{ path('app_logout') }}" method="POST">
                            <button type="submit"
                                    class="px-4 py-2 rounded-lg bg-gradient-to-r from-red-500 to-red-400 text-white shadow-sm hover:shadow-md smooth-transition">
                                Se desconnecter
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Flash Messages Modal -->
        <div x-cloak x-show="isFlashModalOpen"
             x-transition:enter="transition ease-out duration-300"
             x-transition:enter-start="opacity-0"
             x-transition:enter-end="opacity-100"
             x-transition:leave="transition ease-in duration-200"
             x-transition:leave-start="opacity-100"
             x-transition:leave-end="opacity-0"
             class="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-50 backdrop-blur-sm">

            <div x-on:click.away="isFlashModalOpen = false"
                 x-transition:enter="transition ease-out duration-300"
                 x-transition:enter-start="opacity-0 translate-y-4 scale-95"
                 x-transition:enter-end="opacity-100 translate-y-0 scale-100"
                 x-transition:leave="transition ease-in duration-200"
                 x-transition:leave-start="opacity-100 translate-y-0 scale-100"
                 x-transition:leave-end="opacity-0 translate-y-4 scale-95"
                 class="w-full max-w-md rounded-xl bg-white shadow-xl overflow-hidden"
                 :class="{
                    'border-t-4 border-green-500': currentFlashType === 'success',
                    'border-t-4 border-red-500': currentFlashType === 'error',
                    'border-t-4 border-yellow-500': currentFlashType === 'warning',
                    'border-t-4 border-blue-500': currentFlashType === 'info'
                 }">

                <div class="p-6">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-3">
                            <i class="bx text-2xl"
                               :class="{
                                   'bx-check-circle text-green-500': currentFlashType === 'success',
                                   'bx-error-circle text-red-500': currentFlashType === 'error',
                                   'bx-error text-yellow-500': currentFlashType === 'warning',
                                   'bx-info-circle text-blue-500': currentFlashType === 'info'
                               }"></i>
                            <h3 class="text-lg font-bold"
                                :class="{
                                    'text-green-600': currentFlashType === 'success',
                                    'text-red-600': currentFlashType === 'error',
                                    'text-yellow-600': currentFlashType === 'warning',
                                    'text-blue-600': currentFlashType === 'info'
                                }">
                                <span x-text="currentFlashType === 'success' ? 'Success' :
                                              currentFlashType === 'error' ? 'Error' :
                                              currentFlashType === 'warning' ? 'Warning' : 'Information'"></span>
                            </h3>
                            <span class="text-sm text-gray-500" x-show="flashMessages.length > 1">
                                <span x-text="(currentFlashIndex + 1) + '/' + flashMessages.length"></span>
                            </span>
                        </div>
                        <button @click="isFlashModalOpen = false" class="text-gray-400 hover:text-gray-500">
                            <i class="bx bx-x text-2xl"></i>
                        </button>
                    </div>

                    <div class="mt-4">
                        <p x-text="currentFlashMessage" class="text-gray-700"></p>
                    </div>

                    <div class="mt-6 flex justify-between items-center">
                        <div class="flex space-x-2" x-show="flashMessages.length > 1">
                            <button @click="showPreviousFlashMessage()"
                                    class="p-2 rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed smooth-transition"
                                    :disabled="currentFlashIndex === 0">
                                <i class="bx bx-chevron-left"></i>
                            </button>
                            <button @click="showNextFlashMessage()"
                                    class="p-2 rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed smooth-transition"
                                    :disabled="currentFlashIndex === flashMessages.length - 1">
                                <i class="bx bx-chevron-right"></i>
                            </button>
                        </div>
                        <button @click="isFlashModalOpen = false"
                                class="px-4 py-2 rounded-lg text-white smooth-transition"
                                :class="{
                                    'bg-green-500 hover:bg-green-600': currentFlashType === 'success',
                                    'bg-red-500 hover:bg-red-600': currentFlashType === 'error',
                                    'bg-yellow-500 hover:bg-yellow-600': currentFlashType === 'warning',
                                    'bg-blue-500 hover:bg-blue-600': currentFlashType === 'info'
                                }">
                            Close
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}