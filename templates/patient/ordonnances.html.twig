{% extends 'patient/patient.base.html.twig' %}

{% block title %}Mes Ordonnances Médicales{% endblock %}
{% block head %}

{% endblock %}
{% block content %}

    <!-- Hero Header Section -->
    <div class="relative overflow-hidden bg-gradient-to-br from-blue-700 via-blue-600 to-cyan-500 rounded-2xl shadow-xl mb-12 group hover:shadow-2xl transition-all duration-300">
        <!-- Fond avec effet glassmorphism -->
        <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1635070041078-e363dbe005cb?auto=format&fit=crop')] opacity-10 mix-blend-overlay"></div>
        <!-- Effet d'overlay au survol -->
        <div class="absolute inset-0 bg-gradient-to-r from-blue-800/30 to-cyan-600/30 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

        <!-- Motif décoratif -->
        <div class="absolute right-0 bottom-0 w-32 h-32 md:w-48 md:h-48 bg-white/5 rounded-full -mr-16 -mb-16"></div>

        <!-- Contenu principal -->
        <div class="relative px-6 py-12 md:py-16 lg:px-16">
            <div class="max-w-3xl">
                <div class="flex items-center mb-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-cyan-200 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z" />
                    </svg>
                    <span class="text-cyan-100 text-sm font-medium tracking-wider uppercase">Espace Santé</span>
                </div>

                <h1 class="text-4xl md:text-5xl font-bold text-white mb-4 leading-tight tracking-tight">
                    Vos prescriptions médicales
                </h1>

                <p class="text-xl text-blue-100 opacity-90 mb-8 font-light">
                    Historique complet et sécurisé de toutes vos ordonnances
                </p>

                <div class="flex flex-col sm:flex-row sm:items-center gap-4 sm:gap-6">


                    <div class="flex items-center text-cyan-100">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-cyan-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                        </svg>
                        <span class="font-light">Données cryptées et sécurisées</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="space-y-8">
        {% if ordonnances|length > 0 %}
            <!-- Stats Cards -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <!-- Total Prescriptions Card -->
                <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden">
                    <div class="flex p-6">
                        <div class="flex-1">
                            <p class="text-gray-500 dark:text-gray-400 text-sm font-medium">Total des ordonnances</p>
                            <h3 class="text-3xl font-bold text-gray-800 dark:text-white mt-2">{{ ordonnances|length }}</h3>
                        </div>
                        <div class="bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-300 p-3 rounded-xl self-start">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M9 12h6"></path>
                                <path d="M9 16h6"></path>
                                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
                                <path d="M12 3v7"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="h-1 bg-gradient-to-r from-blue-500 to-blue-600"></div>
                </div>

                <!-- Latest Prescription Card -->
                <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden">
                    <div class="flex p-6">
                        <div class="flex-1">
                            <p class="text-gray-500 dark:text-gray-400 text-sm font-medium">Dernière ordonnance</p>
                            <h3 class="text-3xl font-bold text-gray-800 dark:text-white mt-2">
                                {{ ordonnances|first.dateCreation|date('d/m/Y') }}
                            </h3>
                            <p class="text-gray-500 dark:text-gray-400 text-sm mt-1">Par : Dr. {{ ordonnances|first.medecin.user.nom }}</p>
                        </div>
                        <div class="bg-cyan-100 dark:bg-cyan-900/30 text-cyan-600 dark:text-cyan-300 p-3 rounded-xl self-start">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                                <line x1="16" y1="2" x2="16" y2="6"></line>
                                <line x1="8" y1="2" x2="8" y2="6"></line>
                                <line x1="3" y1="10" x2="21" y2="10"></line>
                            </svg>
                        </div>
                    </div>
                    <div class="h-1 bg-gradient-to-r from-cyan-500 to-cyan-600"></div>
                </div>

                <!-- Unique Doctors Card -->
                <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden">
                    <div class="flex p-6">
                        <div class="flex-1">
                            <p class="text-gray-500 dark:text-gray-400 text-sm font-medium">Médecins différents</p>
                            <h3 class="text-3xl font-bold text-gray-800 dark:text-white mt-2">
                                {{ uniqueDoctorsCount }}
                            </h3>
                        </div>
                        <div class="bg-emerald-100 dark:bg-emerald-900/30 text-emerald-600 dark:text-emerald-300 p-3 rounded-xl self-start">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                                <circle cx="9" cy="7" r="4"></circle>
                                <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
                                <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="h-1 bg-gradient-to-r from-emerald-500 to-emerald-600"></div>
                </div>
            </div>

            <!-- Prescriptions Table -->

            <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-md overflow-hidden">
                <!-- Header Section -->
                <div class="px-6 py-5 border-b border-gray-100 dark:border-gray-700 flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
                    <h2 class="text-xl font-bold text-gray-800 dark:text-white flex items-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-500" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                            <polyline points="14 2 14 8 20 8"></polyline>
                            <line x1="16" y1="13" x2="8" y2="13"></line>
                            <line x1="16" y1="17" x2="8" y2="17"></line>
                            <polyline points="10 9 9 9 8 9"></polyline>
                        </svg>
                        Historique des prescriptions
                    </h2>

                    <!-- Search and Filter Controls -->
                    <div class="flex flex-col sm:flex-row gap-3 w-full md:w-auto">
                        <!-- Search input -->
                        <div class="relative flex-grow">
                            <input
                                    type="text"
                                    id="searchInput"
                                    placeholder="Rechercher..."
                                    class="w-full pl-10 pr-4 py-2.5 rounded-xl border border-gray-200 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-700 dark:text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-transparent transition-colors duration-200"
                            >
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 dark:text-gray-500 absolute left-3 top-3" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="11" cy="11" r="8"></circle>
                                <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                            </svg>
                        </div>

                        <!-- Doctor filter dropdown -->
                        <div class="relative min-w-[180px]">
                            <select
                                    id="doctorFilter"
                                    class="w-full appearance-none pl-4 pr-10 py-2.5 rounded-xl border border-gray-200 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-700 dark:text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-transparent transition-colors duration-200"
                            >
                                <option value="">Tous les médecins</option>
                                {% set medecins = [] %}
                                {% for ordonnance in ordonnances %}
                                    {% if ordonnance.medecin.user.nom not in medecins %}
                                        {% set medecins = medecins|merge([ordonnance.medecin.user.nom]) %}
                                        <option value="{{ ordonnance.medecin.user.nom }}">Dr. {{ ordonnance.medecin.user.nom }}</option>
                                    {% endif %}
                                {% endfor %}
                            </select>
                            <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-3 text-gray-500">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <polyline points="6 9 12 15 18 9"></polyline>
                                </svg>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Table Section -->
                <div class="overflow-x-auto scrollbar-thin scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-600">
                    <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                        <thead class="bg-gray-50 dark:bg-gray-700/50">
                        <tr>
                            <th scope="col" class="px-6 py-3.5 text-left text-xs font-semibold text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                                Référence
                            </th>
                            <th scope="col" class="px-6 py-3.5 text-left text-xs font-semibold text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                                Médecin
                            </th>
                            <th scope="col" class="px-6 py-3.5 text-left text-xs font-semibold text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                                Spécialité
                            </th>
                            <th scope="col" class="px-6 py-3.5 text-left text-xs font-semibold text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                                Date
                            </th>
                            <th scope="col" class="px-6 py-3.5 text-right text-xs font-semibold text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                                Actions
                            </th>
                        </tr>
                        </thead>
                        {% set i = 1 %}
                        <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-100 dark:divide-gray-700">
                        {% for ordonnance in ordonnances %}
                            <tr class="hover:bg-blue-50/50 dark:hover:bg-gray-700/70 transition-colors duration-200 prescription-row"
                                data-medecin="{{ ordonnance.medecin.user.nom }}"
                                data-service="{{ ordonnance.medecin.service }}"
                                data-date="{{ ordonnance.getDateCreation|date('d/m/Y') }}"
                                data-email="{{ ordonnance.medecin.user.email }}">

                                <!-- Reference Column -->
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="flex-shrink-0 h-10 w-10 bg-blue-100 dark:bg-blue-900/40 rounded-full flex items-center justify-center shadow-sm">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-600 dark:text-blue-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
                                                <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
                                                <path d="M9 14h6"></path>
                                                <path d="M9 10h6"></path>
                                            </svg>
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-gray-900 dark:text-white">
                                                #{{ i }}
                                            </div>
                                        </div>
                                    </div>
                                </td>

                                <!-- Doctor Column -->
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm font-medium text-gray-900 dark:text-white">Dr. {{ ordonnance.medecin.user.nom }}</div>
                                    <div class="text-xs text-gray-500 dark:text-gray-400 mt-0.5 flex items-center">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                                            <polyline points="22,6 12,13 2,6"></polyline>
                                        </svg>
                                        {{ ordonnance.medecin.user.email }}
                                    </div>
                                </td>

                                <!-- Specialty Column -->
                                <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2.5 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-50 text-blue-700 dark:bg-blue-900/40 dark:text-blue-300 border border-blue-100 dark:border-blue-800">
                            {{ ordonnance.medecin.service }}
                        </span>
                                </td>

                                <!-- Date Column -->
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                                    <div class="flex items-center">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1.5 text-gray-400 dark:text-gray-500" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                                            <line x1="16" y1="2" x2="16" y2="6"></line>
                                            <line x1="8" y1="2" x2="8" y2="6"></line>
                                            <line x1="3" y1="10" x2="21" y2="10"></line>
                                        </svg>
                                        {{ ordonnance.getDateCreation|date('d/m/Y') }}
                                    </div>
                                </td>

                                <!-- Actions Column -->
                                <td class="px-6 py-4 whitespace-nowrap text-right">
                                    <a href="/patient/ordonnance/{{ ordonnance.id }}"
                                       class="group relative inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 shadow-sm hover:shadow focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200">
                                        <!-- Eye icon -->
                                        <span class="absolute left-2 inset-y-0 flex items-center opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                                    <circle cx="12" cy="12" r="3"></circle>
                                </svg>
                            </span>
                                        <!-- Text -->
                                        <span class="pl-0 group-hover:pl-6 transition-all duration-200">Consulter</span>
                                    </a>
                                </td>
                            </tr>
                            {% set i = i + 1 %}
                        {% endfor %}
                        </tbody>
                    </table>

                    <!-- Empty State (Only shown when no results) -->
                    <div id="emptyState" class="hidden p-12 text-center">
                        <div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-gray-100 dark:bg-gray-700 mb-4">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-400 dark:text-gray-500" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <line x1="12" y1="8" x2="12" y2="12"></line>
                                <line x1="12" y1="16" x2="12.01" y2="16"></line>
                            </svg>
                        </div>
                        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-1">Aucune prescription trouvée</h3>
                        <p class="text-gray-500 dark:text-gray-400">Essayez de modifier vos critères de recherche</p>
                    </div>
                </div>

                <div class="px-6 py-3 border-t border-gray-100 dark:border-gray-700 flex items-center justify-between">
                    <div class="text-sm text-gray-500 dark:text-gray-400">
                        Affichage de <span class="font-medium text-gray-900 dark:text-white">{{ ordonnances|length }}</span> prescriptions
                    </div>

                    <div class="flex items-center space-x-1">
                        <button class="inline-flex items-center justify-center p-1.5 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="15 18 9 12 15 6"></polyline>
                            </svg>
                        </button>
                        <span class="inline-flex items-center justify-center min-w-[2rem] h-8 px-2 rounded-md bg-blue-500 text-white font-medium">1</span>
                        <button class="inline-flex items-center justify-center p-1.5 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="9 18 15 12 9 6"></polyline>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>


        {% else %}
            <!-- Empty State -->
            <div class="max-w-3xl mx-auto">
                <div class="text-center px-6 py-16 bg-white dark:bg-gray-800 rounded-xl shadow-lg border-2 border-dashed border-gray-300 dark:border-gray-600 hover:border-blue-500 dark:hover:border-blue-400 transition-colors duration-200">
                    <div class="mx-auto flex items-center justify-center h-24 w-24 rounded-full bg-blue-50 dark:bg-blue-900/30">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-blue-500 dark:text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                        </svg>
                    </div>
                    <h3 class="mt-6 text-2xl font-bold text-gray-900 dark:text-white">Aucune ordonnance disponible</h3>
                    <p class="mt-2 text-lg text-gray-600 dark:text-gray-300">
                        Vos prescriptions médicales apparaîtront ici après consultation avec un professionnel de santé.
                    </p>
                    <div class="mt-8">
                        <a href="{{ path('app_patient_prendrdv') }}" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200">
                            <svg xmlns="http://www.w3.org/2000/svg" class="-ml-1 mr-3 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                            </svg>
                            Prendre rendez-vous
                        </a>
                    </div>
                </div>
            </div>
        {% endif %}
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Pagination configuration
            const itemsPerPage = 5;
            let currentPage = 1;

            // Get all prescription rows
            const prescriptionRows = document.querySelectorAll('.prescription-row');
            const totalItems = prescriptionRows.length;
            const totalPages = Math.ceil(totalItems / itemsPerPage);

            // Search and filter elements
            const searchInput = document.getElementById('searchInput');
            const doctorFilter = document.getElementById('doctorFilter');
            const emptyState = document.getElementById('emptyState');

            // Generate pagination controls dynamically
            generatePaginationControls();

            // Initialize the display
            updateDisplay();

            // Add event listeners
            searchInput.addEventListener('input', function() {
                currentPage = 1; // Reset to first page when searching
                updateDisplay();
                updatePaginationButtons();
            });

            doctorFilter.addEventListener('change', function() {
                currentPage = 1; // Reset to first page when filtering
                updateDisplay();
                updatePaginationButtons();
            });

            // Function to update the display based on current page, search, and filters
            function updateDisplay() {
                const searchTerm = searchInput.value.toLowerCase();
                const selectedDoctor = doctorFilter.value;

                let visibleCount = 0;
                let matchCount = 0;

                // First pass: determine which items match the search/filter criteria
                prescriptionRows.forEach(row => {
                    const medecin = row.getAttribute('data-medecin');
                    const service = row.getAttribute('data-service');
                    const date = row.getAttribute('data-date');
                    const email = row.getAttribute('data-email');

                    // Check if row matches search and filter criteria
                    const matchesSearch =
                        medecin.toLowerCase().includes(searchTerm) ||
                        service.toLowerCase().includes(searchTerm) ||
                        date.toLowerCase().includes(searchTerm) ||
                        email.toLowerCase().includes(searchTerm);

                    const matchesFilter = selectedDoctor === '' || medecin === selectedDoctor;

                    const matches = matchesSearch && matchesFilter;

                    if (matches) {
                        matchCount++;
                    }

                    // Store the match status for the second pass
                    row.dataset.matches = matches ? 'true' : 'false';
                });

                // Second pass: apply pagination to matching items
                prescriptionRows.forEach((row, index) => {
                    const matches = row.dataset.matches === 'true';

                    if (matches) {
                        visibleCount++;

                        // Check if this item should be visible on the current page
                        const itemNumber = visibleCount;
                        const startIndex = (currentPage - 1) * itemsPerPage + 1;
                        const endIndex = currentPage * itemsPerPage;

                        if (itemNumber >= startIndex && itemNumber <= endIndex) {
                            row.style.display = '';
                        } else {
                            row.style.display = 'none';
                        }
                    } else {
                        row.style.display = 'none';
                    }
                });

                // Update the items counter
                document.querySelector('.text-sm.text-gray-500 span').textContent = matchCount;

                // Show/hide empty state
                if (matchCount === 0) {
                    emptyState.classList.remove('hidden');
                } else {
                    emptyState.classList.add('hidden');
                }
            }

            // Function to generate pagination controls
            function generatePaginationControls() {
                const paginationContainer = document.querySelector('.flex.items-center.space-x-1');

                // Clear existing pagination controls
                paginationContainer.innerHTML = '';

                // Create previous button
                const prevButton = document.createElement('button');
                prevButton.id = 'prevPageBtn';
                prevButton.className = 'inline-flex items-center justify-center p-1.5 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed';
                prevButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="15 18 9 12 15 6"></polyline></svg>';
                prevButton.addEventListener('click', function() {
                    if (currentPage > 1) {
                        currentPage--;
                        updateDisplay();
                        updatePaginationButtons();
                    }
                });
                paginationContainer.appendChild(prevButton);

                // Create page number buttons (for pages 1-5)
                const maxVisiblePages = Math.min(5, totalPages);
                for (let i = 1; i <= maxVisiblePages; i++) {
                    const pageButton = document.createElement('button');
                    pageButton.className = 'page-number inline-flex items-center justify-center min-w-[2rem] h-8 px-2 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500';
                    pageButton.textContent = i;
                    pageButton.dataset.page = i;
                    pageButton.addEventListener('click', function() {
                        currentPage = parseInt(this.dataset.page);
                        updateDisplay();
                        updatePaginationButtons();
                    });
                    paginationContainer.appendChild(pageButton);
                }

                // Create next button
                const nextButton = document.createElement('button');
                nextButton.id = 'nextPageBtn';
                nextButton.className = 'inline-flex items-center justify-center p-1.5 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed';
                nextButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="9 18 15 12 9 6"></polyline></svg>';
                nextButton.addEventListener('click', function() {
                    if (currentPage < totalPages) {
                        currentPage++;
                        updateDisplay();
                        updatePaginationButtons();
                    }
                });
                paginationContainer.appendChild(nextButton);

                // Initialize the state of pagination buttons
                updatePaginationButtons();
            }

            // Function to update pagination buttons state
            function updatePaginationButtons() {
                const prevButton = document.getElementById('prevPageBtn');
                const nextButton = document.getElementById('nextPageBtn');
                const pageButtons = document.querySelectorAll('.page-number');

                // Update active state for page number buttons
                pageButtons.forEach(button => {
                    const buttonPage = parseInt(button.dataset.page);
                    if (buttonPage === currentPage) {
                        button.classList.add('bg-blue-500');
                        button.classList.add('text-white');
                        button.classList.add('font-medium');
                    } else {
                        button.classList.remove('bg-blue-500');
                        button.classList.remove('text-white');
                        button.classList.remove('font-medium');
                    }
                });

                // Enable/disable prev/next buttons based on current page
                if (currentPage === 1) {
                    prevButton.setAttribute('disabled', 'disabled');
                } else {
                    prevButton.removeAttribute('disabled');
                }

                if (currentPage === totalPages || totalPages === 0) {
                    nextButton.setAttribute('disabled', 'disabled');
                } else {
                    nextButton.removeAttribute('disabled');
                }
            }
        });
    </script>

{% endblock %}