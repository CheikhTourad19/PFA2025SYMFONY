{% extends 'patient/patient.base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css">
{% endblock %}

{% block content %}
    <div class="container py-4">
        <div class="card shadow-lg border-0 rounded-lg">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="fas fa-calendar-alt me-2"></i>Mon Calendrier de Rendez-vous</h5>
                <div class="btn-group">
                    <button type="button" class="btn btn-sm btn-outline-light" id="today-btn">Aujourd'hui</button>
                    <button type="button" class="btn btn-sm btn-outline-light" id="month-btn">Mois</button>
                    <button type="button" class="btn btn-sm btn-outline-light" id="week-btn">Semaine</button>
                    <button type="button" class="btn btn-sm btn-outline-light" id="day-btn">Jour</button>
                </div>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-md-12">
                        <div class="alert alert-info d-flex align-items-center">
                            <i class="fas fa-info-circle me-3 fs-4"></i>
                            <div>
                                <strong>Légende:</strong>
                                <span class="badge bg-success ms-2">Confirmé</span>
                                <span class="badge bg-warning ms-2">En attente</span>
                                <span class="badge bg-danger ms-2">Annulé</span>
                                <span class="badge bg-info ms-2">Cliquez sur une case horaire libre pour prendre un rendez-vous</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="calendar"></div>
            </div>
        </div>
    </div>

    <!-- Modal pour les détails d'un rendez-vous existant -->
    <div class="modal fade" id="appointmentModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title"><i class="fas fa-calendar-check me-2"></i>Détails du Rendez-vous</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4" id="appointmentDetails">
                    <!-- Details will be loaded here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Fermer
                    </button>
                    <a href="#" id="appointmentModalLink" class="btn btn-primary">
                        <i class="fas fa-calendar me-1"></i>Voir tous les rendez-vous
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal pour prendre un nouveau rendez-vous -->
    <div class="modal fade" id="newAppointmentModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title"><i class="fas fa-calendar-plus me-2"></i>Nouveau Rendez-vous</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="alert alert-info d-flex align-items-center mb-4">
                        <i class="fas fa-info-circle me-3 fs-4"></i>
                        <div id="newAppointmentDate"></div>
                    </div>

                    <h6 class="mb-3">Médecins disponibles :</h6>
                    <div id="availableDoctors" class="mb-3">
                        <div class="text-center p-3">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Chargement...</span>
                            </div>
                            <p class="mt-2">Recherche des médecins disponibles...</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Annuler
                    </button>
                </div>
            </div>
        </div>
    </div>
{% endblock content %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const calendarEl = document.getElementById('calendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                locale: 'fr',
                headerToolbar: {
                    left: 'prev,next',
                    center: 'title',
                    right: ''
                },
                buttonText: {
                    today: "Aujourd'hui",
                    month: 'Mois',
                    week: 'Semaine',
                    day: 'Jour'
                },
                slotMinTime: '08:00',
                slotMaxTime: '18:00',
                slotDuration: '01:00',
                allDaySlot: false,
                selectable: true,
                selectMirror: true,
                events: [
                    {% for appointment in rdv %}
                    {
                        id: '{{ appointment.id }}',
                        title: 'RDV avec Dr. {{ appointment.medecin.user.nom }} {{ appointment.medecin.user.prenom }}',
                        start: '{{ appointment.date|date('Y-m-d\\TH:i:s') }}',
                        {% if appointment.statut == 'confirme' %}
                        color: '#28a745', // vert pour confirmé
                        {% elseif appointment.statut == 'en_attente' %}
                        color: '#ffc107', // jaune pour en attente
                        {% elseif appointment.statut == 'annule' %}
                        color: '#dc3545', // rouge pour annulé
                        {% else %}
                        color: '#6c757d', // gris par défaut
                        {% endif %}
                        textColor: '#fff',
                        borderRadius: '4px',
                        className: 'shadow-sm'
                    },
                    {% endfor %}
                ],
                eventClick: function(info) {
                    info.jsEvent.preventDefault();

                    // Get appointment details
                    const appointmentId = info.event.id;
                    const title = info.event.title;
                    const date = new Date(info.event.start);
                    const formattedDate = date.toLocaleDateString('fr-FR', {weekday: 'long', day: 'numeric', month: 'long', year: 'numeric'}) + ' à ' +
                        date.toLocaleTimeString('fr-FR', {hour: '2-digit', minute:'2-digit'});
                    const status = info.event.backgroundColor === '#28a745' ? 'Confirmé' :
                        info.event.backgroundColor === '#ffc107' ? 'En attente' :
                            info.event.backgroundColor === '#dc3545' ? 'Annulé' : 'Statut inconnu';
                    const statusClass = info.event.backgroundColor === '#28a745' ? 'bg-success' :
                        info.event.backgroundColor === '#ffc107' ? 'bg-warning' :
                            info.event.backgroundColor === '#dc3545' ? 'bg-danger' : 'bg-secondary';

                    // Fill modal with details
                    document.getElementById('appointmentDetails').innerHTML = `
                <div class="mb-3 pb-3 border-bottom">
                    <div class="d-flex align-items-center mb-3">
                        <div class="doctor-avatar bg-primary text-white me-3">
                            ${title.split(' ')[3].charAt(0)}
                        </div>
                        <div>
                            <h6 class="fw-bold mb-0">${title}</h6>
                            <span class="badge ${statusClass}">${status}</span>
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    <p class="mb-2"><i class="fas fa-calendar-day me-2 text-primary"></i><strong>Date:</strong> ${formattedDate}</p>
                    <p class="mb-2"><i class="fas fa-map-marker-alt me-2 text-primary"></i><strong>Lieu:</strong> Centre médical</p>
                    <p class="mb-0"><i class="fas fa-notes-medical me-2 text-primary"></i><strong>Type:</strong> Consultation</p>
                </div>
            `;

                    // Update the link
                    document.getElementById('appointmentModalLink').href = '{{ path('app_patient_rdv') }}';

                    // Show modal
                    new bootstrap.Modal(document.getElementById('appointmentModal')).show();
                },
                dateClick: function(info) {
                    // Vérifier si c'est un jour ouvrable (lundi au vendredi)
                    const clickedDate = new Date(info.dateStr);
                    const dayOfWeek = clickedDate.getDay(); // 0 = dimanche, 1 = lundi, etc.

                    if (dayOfWeek === 0 || dayOfWeek === 6) {
                        // Weekend - afficher un message d'erreur
                        alert('Les rendez-vous ne sont disponibles que du lundi au vendredi.');
                        return;
                    }

                    // Format the date nicely for display
                    const formattedDate = clickedDate.toLocaleDateString('fr-FR', {
                        weekday: 'long',
                        day: 'numeric',
                        month: 'long',
                        year: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit'
                    });

                    // Afficher une confirmation avant de charger les médecins
                    if (confirm(`Souhaitez-vous prendre un rendez-vous le ${formattedDate} ?`)) {
                        // Afficher la date dans le modal
                        document.getElementById('newAppointmentDate').innerHTML = `
                    <strong>Vous avez choisi de prendre un rendez-vous le ${formattedDate}</strong>
                `;

                        // Récupérer les médecins disponibles via AJAX
                        loadAvailableDoctors(clickedDate);

                        // Show new appointment modal
                        new bootstrap.Modal(document.getElementById('newAppointmentModal')).show();
                    }
                }
            });

            calendar.render();

            // Custom button handlers for responsive design
            document.getElementById('today-btn').addEventListener('click', function() {
                calendar.today();
            });

            document.getElementById('month-btn').addEventListener('click', function() {
                calendar.changeView('dayGridMonth');
            });

            document.getElementById('week-btn').addEventListener('click', function() {
                calendar.changeView('timeGridWeek');
            });

            document.getElementById('day-btn').addEventListener('click', function() {
                calendar.changeView('timeGridDay');
            });

            // Fonction pour charger les médecins disponibles via AJAX
            function loadAvailableDoctors(date) {
                const availableDoctorsContainer = document.getElementById('availableDoctors');

                // Afficher un indicateur de chargement
                availableDoctorsContainer.innerHTML = `
            <div class="text-center p-3">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Chargement...</span>
                </div>
                <p class="mt-2">Recherche des médecins disponibles...</p>
            </div>
        `;

                // Créer un objet FormData pour l'envoi des données
                const formattedDate = date.toISOString();

                // Utiliser Fetch API pour appeler le endpoint des médecins disponibles
                fetch('/patient/medecins-disponibles', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ date: formattedDate })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Erreur lors de la récupération des médecins disponibles');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success && data.medecins.length > 0) {
                            // Construire la liste des médecins disponibles
                            let html = '<div class="list-group">';
                            data.medecins.forEach(doctor => {
                                const dateParam = encodeURIComponent(formattedDate);
                                html += `
                        <div class="list-group-item">
                            <div class="d-flex w-100 justify-content-between align-items-center">
                                <div>
                                    <div class="d-flex align-items-center">
                                        <div class="doctor-avatar bg-primary text-white me-3">
                                            ${doctor.prenom.charAt(0)}
                                        </div>
                                        <div>
                                            <h6 class="mb-0">Dr. ${doctor.nom} ${doctor.prenom}</h6>
                                            <span class="badge bg-light text-primary">${doctor.service}</span>
                                        </div>
                                    </div>
                                </div>
                                <button onclick="confirmAppointment('${doctor.id}', '${dateParam}')" class="btn btn-success btn-sm">
                                    <i class="fas fa-check-circle me-1"></i> Choisir
                                </button>
                            </div>
                        </div>
                    `;
                            });
                            html += '</div>';
                            availableDoctorsContainer.innerHTML = html;
                        } else {
                            // Aucun médecin disponible
                            availableDoctorsContainer.innerHTML = `
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Aucun médecin disponible à cette date et heure.
                    </div>
                `;
                        }
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                        availableDoctorsContainer.innerHTML = `
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    Une erreur est survenue lors de la recherche des médecins disponibles.
                </div>
            `;
                    });
            }
        });

        // Fonction pour confirmer la prise de rendez-vous
        function confirmAppointment(doctorId, dateParam) {
            // Fermez le modal actuel
            const modal = bootstrap.Modal.getInstance(document.getElementById('newAppointmentModal'));
            if (modal) {
                modal.hide();
            }

            // Décodez la date pour l'affichage
            const displayDate = new Date(decodeURIComponent(dateParam)).toLocaleDateString('fr-FR', {
                weekday: 'long',
                day: 'numeric',
                month: 'long',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });

            // Afficher la boîte de dialogue de confirmation finale
            if (confirm(`Confirmez-vous la prise de rendez-vous pour le ${displayDate} ?`)) {
                // Rediriger vers la route de prise de rendez-vous
                window.location.href = `/patient/prendre-rdv/${doctorId}/${dateParam}`;
            }
        }    </script>
    <style>
        #calendar {
            height: 650px;
            margin: 0 auto;
        }

        .fc-event {
            cursor: pointer;
            border-radius: 4px;
            padding: 4px;
            margin: 2px 0;
            border: none;
        }

        .fc-toolbar-title {
            text-transform: capitalize;
            font-weight: bold;
            color: #0d6efd;
        }

        .fc-day-today {
            background-color: rgba(13, 110, 253, 0.05) !important;
        }

        .fc-header-toolbar {
            margin-bottom: 1rem !important;
        }

        .fc .fc-button-primary {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        .doctor-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.2rem;
        }

        .fc-timegrid-slot {
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .fc-timegrid-slot:hover {
            background-color: rgba(13, 110, 253, 0.1);
        }

        @media (max-width: 768px) {
            #calendar {
                height: 500px;
            }

            .fc-header-toolbar {
                flex-direction: column;
                gap: 10px;
            }
        }
    </style>
{% endblock %}